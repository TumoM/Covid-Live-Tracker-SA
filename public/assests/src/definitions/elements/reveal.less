/*!
***REMOVED*** # Fomantic-UI - Reveal
***REMOVED*** http://github.com/fomantic/Fomantic-UI/
***REMOVED***
***REMOVED***
***REMOVED*** Released under the MIT license
***REMOVED*** http://opensource.org/licenses/MIT
***REMOVED***
***REMOVED***/

***REMOVED********************************
            Theme
*******************************/

@type    : 'element';
@element : 'reveal';

@import (multiple) '../../theme.config';

***REMOVED********************************
            Reveal
*******************************/

.ui.reveal  {
  display: inherit;
  position: relative !important;
  font-size: 0;
***REMOVED***

.ui.reveal > .visible.content {
  position: absolute !important;
  top: 0 !important;
  left: 0 !important;
  z-index: @topZIndex !important;
  transition: @transition;
***REMOVED***
.ui.reveal > .hidden.content {
  position: relative !important;
  z-index: @bottomZIndex !important;
***REMOVED***

/* Make sure hovered element is on top of other reveal***REMOVED***/
.ui.active.reveal .visible.content,
.ui.reveal:hover .visible.content {
  z-index: @activeZIndex !important;
***REMOVED***


***REMOVED********************************
              Types
*******************************/

& when (@variationRevealSlide) {
  /*--------------
        Slide
  ---------------*/

  .ui.slide.reveal {
    position: relative !important;
    overflow: hidden !important;
    white-space: nowrap;
***REMOVED***

  .ui.slide.reveal > .content {
    display: block;
    width: 100%;
    white-space: normal;
    float: left;

    margin: 0;
    transition: @slideTransition;
***REMOVED***

  .ui.slide.reveal > .visible.content {
    position: relative !important;
***REMOVED***
  .ui.slide.reveal > .hidden.content {
    position: absolute !important;
    left: 0 !important;
    width: 100% !important;
    transform: translateX(100%) !important;
***REMOVED***
  .ui.slide.active.reveal > .visible.content,
  .ui.slide.reveal:hover > .visible.content {
    transform: translateX(-100%) !important;
***REMOVED***
  .ui.slide.active.reveal > .hidden.content,
  .ui.slide.reveal:hover > .hidden.content {
    transform: translateX(0%) !important;
***REMOVED***

  .ui.slide.right.reveal > .visible.content {
    transform: translateX(0%) !important;
***REMOVED***
  .ui.slide.right.reveal > .hidden.content {
    transform: translateX(-100%) !important;
***REMOVED***
  .ui.slide.right.active.reveal > .visible.content,
  .ui.slide.right.reveal:hover > .visible.content {
    transform: translateX(100%) !important;
***REMOVED***
  .ui.slide.right.active.reveal > .hidden.content,
  .ui.slide.right.reveal:hover > .hidden.content {
    transform: translateX(0%) !important;
***REMOVED***

  .ui.slide.up.reveal > .hidden.content {
    transform: translateY(100%) !important;
***REMOVED***
  .ui.slide.up.active.reveal > .visible.content,
  .ui.slide.up.reveal:hover > .visible.content {
    transform: translateY(-100%) !important;
***REMOVED***
  .ui.slide.up.active.reveal > .hidden.content,
  .ui.slide.up.reveal:hover > .hidden.content {
    transform: translateY(0%) !important;
***REMOVED***

  .ui.slide.down.reveal > .hidden.content {
    transform: translateY(-100%) !important;
***REMOVED***
  .ui.slide.down.active.reveal > .visible.content,
  .ui.slide.down.reveal:hover > .visible.content {
    transform: translateY(100%) !important;
***REMOVED***
  .ui.slide.down.active.reveal > .hidden.content,
  .ui.slide.down.reveal:hover > .hidden.content {
    transform: translateY(0%) !important;
***REMOVED***
***REMOVED***

& when (@variationRevealFade) {
  /*--------------
        Fade
  ---------------*/

  .ui.fade.reveal > .visible.content {
    opacity: 1;
***REMOVED***
  .ui.fade.active.reveal > .visible.content,
  .ui.fade.reveal:hover > .visible.content {
    opacity: 0;
***REMOVED***
***REMOVED***

& when (@variationRevealMove) {
  /*--------------
        Move
  ---------------*/

  .ui.move.reveal {
    position: relative !important;
    overflow: hidden !important;
    white-space: nowrap;
***REMOVED***

  .ui.move.reveal > .content {
    display: block;
    float: left;
    white-space: normal;

    margin: 0;
    transition: @moveTransition;
***REMOVED***

  .ui.move.reveal > .visible.content {
    position: relative !important;
***REMOVED***
  .ui.move.reveal > .hidden.content {
    position: absolute !important;
    left: 0 !important;
    width: 100% !important;
***REMOVED***
  .ui.move.active.reveal > .visible.content,
  .ui.move.reveal:hover > .visible.content {
    transform: translateX(-100%) !important;
***REMOVED***
  .ui.move.right.active.reveal > .visible.content,
  .ui.move.right.reveal:hover > .visible.content {
    transform: translateX(100%) !important;
***REMOVED***
  .ui.move.up.active.reveal > .visible.content,
  .ui.move.up.reveal:hover > .visible.content {
    transform: translateY(-100%) !important;
***REMOVED***
  .ui.move.down.active.reveal > .visible.content,
  .ui.move.down.reveal:hover > .visible.content {
    transform: translateY(100%) !important;
***REMOVED***
***REMOVED***


& when (@variationRevealRotate) {
  /*--------------
       Rotate
  ---------------*/

  .ui.rotate.reveal > .visible.content {
    transition-duration: @transitionDuration;
    transform: rotate(0deg);
***REMOVED***

  .ui.rotate.reveal > .visible.content,
  .ui.rotate.right.reveal > .visible.content {
    transform-origin: bottom right;
***REMOVED***
  .ui.rotate.active.reveal > .visible.content,
  .ui.rotate.reveal:hover > .visible.content,
  .ui.rotate.right.active.reveal > .visible.content,
  .ui.rotate.right.reveal:hover > .visible.content {
    transform: rotate(@rotateDegrees);
***REMOVED***

  .ui.rotate.left.reveal > .visible.content {
    transform-origin: bottom left;
***REMOVED***
  .ui.rotate.left.active.reveal > .visible.content,
  .ui.rotate.left.reveal:hover > .visible.content {
    transform: rotate(-@rotateDegrees);
***REMOVED***
***REMOVED***

***REMOVED********************************
              States
*******************************/

& when (@variationRevealDisabled) {
  .ui.disabled.reveal:hover > .visible.visible.content {
    position: static !important;
    display: block !important;
    opacity: 1 !important;
    top: 0 !important;
    left: 0 !important;
    right: auto !important;
    bottom: auto !important;
    transform: none !important;
***REMOVED***
  .ui.disabled.reveal:hover > .hidden.hidden.content {
    display: none !important;
***REMOVED***
***REMOVED***


***REMOVED********************************
           Coupling
*******************************/

.ui.reveal > .ui.ribbon.label {
  z-index: @overlayZIndex;
***REMOVED***

***REMOVED********************************
           Variations
*******************************/

/*--------------
     Visible
---------------*/

.ui.visible.reveal {
  overflow: visible;
***REMOVED***

/*--------------
     Instant
---------------*/

.ui.instant.reveal > .content {
  transition-delay: 0s !important;
***REMOVED***


/*--------------
     Sizing
---------------*/

.ui.reveal > .content {
  font-size: @medium;
***REMOVED***
& when not (@variationRevealSizes = false) {
  each(@variationRevealSizes, {
    @s: @@value;
    .ui.@{value***REMOVED***.reveal > .content {
      font-size: @s;
  ***REMOVED***
***REMOVED***)
***REMOVED***

.loadUIOverrides();
