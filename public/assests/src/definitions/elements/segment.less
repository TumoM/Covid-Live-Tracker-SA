/*!
***REMOVED*** # Fomantic-UI - Segment
***REMOVED*** http://github.com/fomantic/Fomantic-UI/
***REMOVED***
***REMOVED***
***REMOVED*** Released under the MIT license
***REMOVED*** http://opensource.org/licenses/MIT
***REMOVED***
***REMOVED***/

***REMOVED********************************
            Theme
*******************************/

@type    : 'element';
@element : 'segment';

@import (multiple) '../../theme.config';

***REMOVED********************************
            Segment
*******************************/

.ui.segment {
  position: relative;
  background: @background;
  box-shadow: @boxShadow;
  margin: @margin;
  padding: @padding;
  border-radius: @borderRadius;
  border: @border;
***REMOVED***

.ui.segment:first-child {
  margin-top: 0;
***REMOVED***
.ui.segment:last-child {
  margin-bottom: 0;
***REMOVED***

& when (@variationSegmentVertical) {
  /* Vertical***REMOVED***/
  .ui.vertical.segment {
    margin: 0;
    padding-left: 0;
    padding-right: 0;

    background: none transparent;
    border-radius: 0;
    box-shadow: none;
    border: none;
    border-bottom: @borderWidth solid @borderColor;
***REMOVED***
  .ui.vertical.segment:last-child {
    border-bottom: none;
***REMOVED***
***REMOVED***


/*-------------------
    Loose Coupling
--------------------*/
& when (@variationSegmentInverted) {
  /* Header***REMOVED***/
  .ui.inverted.segment > .ui.header .sub.header,
  .ui.inverted.segment > .ui.header {
    color: @white;
***REMOVED***
***REMOVED***

& when (@variationSegmentAttached) {
  /* Label***REMOVED***/
  .ui[class*="bottom attached"].segment > [class*="top attached"].label {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
***REMOVED***
  .ui[class*="top attached"].segment > [class*="bottom attached"].label {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
***REMOVED***
  .ui.attached.segment:not(.top):not(.bottom) > [class*="top attached"].label {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
***REMOVED***
  .ui.attached.segment:not(.top):not(.bottom) > [class*="bottom attached"].label {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
***REMOVED***
***REMOVED***

/* Grid***REMOVED***/
.ui.page.grid.segment,
.ui.grid > .row > .ui.segment.column,
.ui.grid > .ui.segment.column {
  padding-top: @pageGridMargin;
  padding-bottom: @pageGridMargin;
***REMOVED***
.ui.grid.segment {
  margin: @margin;
  border-radius: @borderRadius;
***REMOVED***

/* Table***REMOVED***/
.ui.basic.table.segment {
  background: @background;
  border: @border;
  box-shadow: @boxShadow;
***REMOVED***
.ui[class*="very basic"].table.segment {
  padding: @padding;
***REMOVED***

/* Tab***REMOVED***/
.ui.segment.tab:last-child {
  margin-bottom: @verticalMargin;
***REMOVED***

***REMOVED********************************
             Types
*******************************/

& when (@variationSegmentPlaceholder) {
  /*-------------------
       Placeholder
  --------------------*/

  .ui.placeholder.segment {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: stretch;
    max-width: initial;
    animation: none;
    overflow: visible;
    padding: @placeholderPadding;
    min-height: @placeholderMinHeight;
    background: @placeholderBackground;
    border-color: @placeholderBorderColor;
    box-shadow: @placeholderBoxShadow;
***REMOVED***

  .ui.placeholder.segment .button,
  .ui.placeholder.segment textarea {
    display: block;
***REMOVED***
  .ui.placeholder.segment .field,
  .ui.placeholder.segment textarea,
  .ui.placeholder.segment > .ui.input,
  .ui.placeholder.segment .button {
    max-width: @placeholderContentMaxWidth;
    margin-left: auto;
    margin-right: auto;
***REMOVED***
  .ui.placeholder.segment .column .button,
  .ui.placeholder.segment .column .field,
  .ui.placeholder.segment .column textarea,
  .ui.placeholder.segment .column > .ui.input {
    max-width: @placeholderContentMaxWidth;
    margin-left: auto;
    margin-right: auto;
***REMOVED***

  .ui.placeholder.segment > .inline  {
    align-self: center;
***REMOVED***
  .ui.placeholder.segment > .inline > .button {
    display: inline-block;
    width: auto;
    margin: @placeholderContentInlineButtonMargin;
***REMOVED***
  .ui.placeholder.segment > .inline > .button:last-child {
    margin-right: 0;
***REMOVED***
***REMOVED***

& when (@variationSegmentPiled) {
  /*-------------------
          Piled
  --------------------*/

  .ui.piled.segments,
  .ui.piled.segment {
    margin: @piledMargin 0;
    box-shadow: @piledBoxShadow;
    z-index: @piledZIndex;
***REMOVED***
  .ui.piled.segment:first-child {
    margin-top: 0;
***REMOVED***
  .ui.piled.segment:last-child {
    margin-bottom: 0;
***REMOVED***
  .ui.piled.segments:after,
  .ui.piled.segments:before,
  .ui.piled.segment:after,
  .ui.piled.segment:before {
    background-color: @white;
    visibility: visible;
    content: '';
    display: block;
    height: 100%;
    left: 0;
    position: absolute;
    width: 100%;
    border: @piledBorder;
    box-shadow: @piledBoxShadow;
***REMOVED***
  .ui.piled.segments:before,
  .ui.piled.segment:before {
    transform: rotate(-@piledDegrees);
    top: 0;
    z-index: -2;
***REMOVED***
  .ui.piled.segments:after,
  .ui.piled.segment:after {
    transform: rotate(@piledDegrees);
    top: 0;
    z-index: -1;
***REMOVED***
  & when (@variationSegmentAttached) {
    /* Piled Attached***REMOVED***/
    .ui[class*="top attached"].piled.segment {
      margin-top: @piledMargin;
      margin-bottom: 0;
  ***REMOVED***
    .ui.piled.segment[class*="top attached"]:first-child {
      margin-top: 0;
  ***REMOVED***
    .ui.piled.segment[class*="bottom attached"] {
      margin-top: 0;
      margin-bottom: @piledMargin;
  ***REMOVED***
    .ui.piled.segment[class*="bottom attached"]:last-child {
      margin-bottom: 0;
  ***REMOVED***
***REMOVED***
***REMOVED***

& when (@variationSegmentStacked) {
  /*-------------------
         Stacked
  --------------------*/

  .ui.stacked.segment {
    padding-bottom: @stackedPadding;
***REMOVED***
  .ui.stacked.segments:before,
  .ui.stacked.segments:after,
  .ui.stacked.segment:before,
  .ui.stacked.segment:after {
    content: '';
    position: absolute;
    bottom: -(@stackedHeight / 2);
    left: 0;

    border-top: 1px solid @borderColor;
    background: @stackedPageBackground;

    width: 100%;
    height: @stackedHeight;
    visibility: visible;
***REMOVED***
  .ui.stacked.segments:before,
  .ui.stacked.segment:before {
    display: none;
***REMOVED***

  /* Add additional page***REMOVED***/
  .ui.tall.stacked.segments:before,
  .ui.tall.stacked.segment:before {
    display: block;
    bottom: 0;
***REMOVED***
  & when (@variationSegmentInverted) {
    /* Inverted***REMOVED***/
    .ui.stacked.inverted.segments:before,
    .ui.stacked.inverted.segments:after,
    .ui.stacked.inverted.segment:before,
    .ui.stacked.inverted.segment:after {
      background-color: @subtleTransparentBlack;
      border-top: 1px solid @selectedBorderColor;
  ***REMOVED***
***REMOVED***
***REMOVED***

& when (@variationSegmentPadded) {
  /*-------------------
         Padded
  --------------------*/

  .ui.padded.segment {
    padding: @paddedSegmentPadding;
***REMOVED***

  .ui[class*="very padded"].segment {
    padding: @veryPaddedSegmentPadding;
***REMOVED***

  & when (@variationSegmentVertical) {
    /* Padded vertical***REMOVED***/
    .ui.padded.segment.vertical.segment,
    .ui[class*="very padded"].vertical.segment {
      padding-left: 0;
      padding-right: 0;
  ***REMOVED***
***REMOVED***
***REMOVED***

& when (@variationSegmentCompact) {
  /*-------------------
         Compact
  --------------------*/

  .ui.compact.segment {
    display: table;
***REMOVED***

  /* Compact Group***REMOVED***/
  .ui.compact.segments {
    display: inline-flex;
***REMOVED***
  .ui.compact.segments .segment,
  .ui.segments .compact.segment {
    display: block;
    flex: 0 1 auto;
***REMOVED***
***REMOVED***

& when (@variationSegmentCircular) {
  /*-------------------
         Circular
  --------------------*/

  .ui.circular.segment {
    display: table-cell;
    padding: @circularPadding;
    text-align: center;
    vertical-align: middle;
    border-radius: 500em;
***REMOVED***
***REMOVED***

& when (@variationSegmentRaised) {
  /*-------------------
         Raised
  --------------------*/

  .ui.raised.raised.segments,
  .ui.raised.raised.segment {
    box-shadow: @raisedBoxShadow;
***REMOVED***
***REMOVED***

& when (@variationSegmentGroups) {
 ***REMOVED*****REMOVED********************************
              Groups
 ***REMOVED*********************************/

  /* Group***REMOVED***/
  .ui.segments {
    flex-direction: column;
    position: relative;
    margin: @groupedMargin;
    border: @groupedBorder;
    box-shadow: @groupedBoxShadow;
    border-radius: @groupedBorderRadius;
***REMOVED***
  .ui.segments:first-child {
    margin-top: 0;
***REMOVED***
  .ui.segments:last-child {
    margin-bottom: 0;
***REMOVED***


  /* Nested Segment***REMOVED***/
  .ui.segments > .segment {
    top: 0;
    bottom: 0;
    border-radius: 0;
    margin: @groupedSegmentMargin;
    width: @groupedSegmentWidth;
    box-shadow: @groupedSegmentBoxShadow;
    border: @groupedSegmentBorder;
    border-top: @groupedSegmentDivider;
***REMOVED***

  .ui.segments:not(.horizontal) > .segment:first-child {
    top: @attachedTopOffset;
    bottom: 0;
    border-top: none;
    margin-top: 0;
    margin-bottom: 0;
    border-radius: @borderRadius @borderRadius 0 0;
***REMOVED***

  /* Bottom***REMOVED***/
  .ui.segments:not(.horizontal) > .segment:last-child {
    top: @attachedBottomOffset;
    bottom: 0;
    margin-top: 0;
    margin-bottom: 0;
    box-shadow: @attachedBottomBoxShadow;
    border-radius: 0 0 @borderRadius @borderRadius;
***REMOVED***

  /* Only***REMOVED***/
  .ui.segments:not(.horizontal) > .segment:only-child {
    border-radius: @borderRadius;
***REMOVED***


  /* Nested Group***REMOVED***/
  .ui.segments > .ui.segments {
    border-top: @groupedSegmentDivider;
    margin: @nestedGroupMargin;
***REMOVED***
  .ui.segments > .segments:first-child {
    border-top: none;
***REMOVED***
  .ui.segments > .segment + .segments:not(.horizontal) {
    margin-top: 0;
***REMOVED***

  & when (@variationSegmentHorizontal) {
    /* Horizontal Group***REMOVED***/
    .ui.horizontal.segments {
      display: flex;
      flex-direction: row;
      background-color: transparent;
      padding: 0;
      box-shadow: @boxShadow;
      margin: @margin;
      border-radius: @borderRadius;
      border: @border;
  ***REMOVED***
    .ui.stackable.horizontal.segments {
      flex-wrap: wrap;
  ***REMOVED***

    /* Nested Horizontal Group***REMOVED***/
    .ui.segments > .horizontal.segments {
      margin: 0;
      background-color: transparent;
      border-radius: 0;
      border: none;
      box-shadow: none;
      border-top: @groupedSegmentDivider;
  ***REMOVED***

    /* Horizontal Segment***REMOVED***/
    .ui.horizontal.segments:not(.compact) > .segment:not(.compact) {
      flex: 1 1 auto;
      -ms-flex: 1 1 0; /* Solves #2550 MS Flex***REMOVED***/
  ***REMOVED***
    .ui.horizontal.segments > .segment {
      margin: 0;
      min-width: 0;
      border-radius: 0;
      border: none;
      box-shadow: none;
      border-left: @borderWidth solid @borderColor;
  ***REMOVED***

    /* Border Fixes***REMOVED***/
    .ui.segments > .horizontal.segments:first-child {
      border-top: none;
  ***REMOVED***
    .ui.horizontal.segments:not(.stackable) > .segment:first-child {
      border-left: none;
  ***REMOVED***
***REMOVED***
***REMOVED***


***REMOVED********************************
            States
*******************************/

& when (@variationSegmentDisabled) {
  /*--------------
      Disabled
  ---------------*/

  .ui.disabled.segment {
    opacity: @disabledOpacity;
    color: @disabledTextColor;
***REMOVED***
***REMOVED***

& when (@variationSegmentLoading) {
  /*--------------
      Loading
  ---------------*/

  .ui.loading.segment {
    position: relative;
    cursor: default;
    pointer-events: none;
    text-shadow: none !important;
    transition: all 0s linear;
***REMOVED***
  .ui.loading.segment:before {
    position: absolute;
    content: '';
    top: 0;
    left: 0;
    background: @loaderDimmerColor;
    width: 100%;
    height: 100%;
    border-radius: @borderRadius;
    z-index: @loaderDimmerZIndex;
***REMOVED***
  .ui.loading.segment:after {
    position: absolute;
    content: '';
    top: 50%;
    left: 50%;

    margin: @loaderMargin;
    width: @loaderSize;
    height: @loaderSize;

    animation: loader @loaderSpeed infinite linear;
    border: @loaderLineWidth solid @loaderLineColor;
    border-radius: @circularRadius;

    box-shadow: 0 0 0 1px transparent;
    visibility: visible;
    z-index: @loaderLineZIndex;
***REMOVED***
***REMOVED***



***REMOVED********************************
           Variations
*******************************/

& when (@variationSegmentBasic) {
  /*-------------------
         Basic
  --------------------*/

  .ui.basic.segment,
  .ui.segments .ui.basic.segment,
  .ui.basic.segments {
    background: @basicBackground;
    box-shadow: @basicBoxShadow;
    border: @basicBorder;
    border-radius: @basicBorderRadius;
***REMOVED***
***REMOVED***

& when (@variationSegmentClearing) {
  /*-------------------
         Clearing
  --------------------*/

  .ui.clearing.segment:after {
    content: "";
    display: block;
    clear: both;
***REMOVED***
***REMOVED***

/*-------------------
       Colors
--------------------*/

each(@colors,{
  @color: replace(@key,'@','');
  @c: @colors[@@color][color];
  & when not (@color=primary) and not (@color=secondary) {
    .ui.@{color***REMOVED***.segment.segment.segment.segment.segment:not(.inverted) {
      border-top: @coloredBorderSize solid @c;
  ***REMOVED***
    & when (@variationSegmentInverted) {
      .ui.inverted.@{color***REMOVED***.segment.segment.segment.segment.segment {
        background-color: @c;
        color: @white;
    ***REMOVED***
  ***REMOVED***
***REMOVED***
***REMOVED***)

& when (@variationSegmentAligned) {
  /*-------------------
         Aligned
  --------------------*/

  .ui[class*="left aligned"].segment {
    text-align: left;
***REMOVED***
  .ui[class*="right aligned"].segment {
    text-align: right;
***REMOVED***
  .ui[class*="center aligned"].segment {
    text-align: center;
***REMOVED***
***REMOVED***

& when (@variationSegmentFloating) {
  /*-------------------
         Floated
  --------------------*/

  .ui.floated.segment,
  .ui[class*="left floated"].segment {
    float: left;
    margin-right: @floatedDistance;
***REMOVED***
  .ui[class*="right floated"].segment {
    float: right;
    margin-left: @floatedDistance;
***REMOVED***
***REMOVED***

& when (@variationSegmentInverted) {
  /*-------------------
        Inverted
  --------------------*/

  .ui.inverted.segment {
    border: none;
    box-shadow: none;
***REMOVED***
  .ui.inverted.segment,
  .ui.primary.inverted.segment {
    background: @invertedBackground;
    color: @invertedTextColor;
***REMOVED***

  /* Nested***REMOVED***/
  .ui.inverted.segment .segment {
    color: @textColor;
***REMOVED***
  .ui.inverted.segment .inverted.segment {
    color: @invertedTextColor;
***REMOVED***
  & when (@variationSegmentAttached) {
    /* Attached***REMOVED***/
    .ui.inverted.attached.segment {
      border-color: @solidWhiteBorderColor;
  ***REMOVED***
***REMOVED***
  & when (@variationSegmentLoading) {
    /* Loading***REMOVED***/
    .ui.inverted.loading.segment {
      color: @invertedLoaderLineColor;
  ***REMOVED***
    .ui.inverted.loading.segment:before {
      background: @loaderInvertedDimmerColor;
  ***REMOVED***
***REMOVED***
***REMOVED***

/*-------------------
     Emphasis
--------------------*/
& when (@variationSegmentSecondary) {
  /* Secondary***REMOVED***/
  .ui.secondary.segment {
    background: @secondaryBackground;
    color: @secondaryColor;
***REMOVED***
  & when (@variationSegmentInverted) {
    .ui.secondary.inverted.segment {
      background: @secondaryInvertedBackground;
      color: @secondaryInvertedColor;
  ***REMOVED***
***REMOVED***
***REMOVED***

& when (@variationSegmentTertiary) {
  /* Tertiary***REMOVED***/
  .ui.tertiary.segment {
    background: @tertiaryBackground;
    color: @tertiaryColor;
***REMOVED***
  & when (@variationSegmentInverted) {
    .ui.tertiary.inverted.segment {
      background: @tertiaryInvertedBackground;
      color: @tertiaryInvertedColor;
  ***REMOVED***
***REMOVED***
***REMOVED***

& when (@variationSegmentAttached) {
  /*-------------------
        Attached
  --------------------*/

  /* Middle***REMOVED***/
  .ui.attached.segment {
    top: 0;
    bottom: 0;
    border-radius: 0;
    margin: 0 @attachedHorizontalOffset;
    width: @attachedWidth;
    max-width: @attachedWidth;
    box-shadow: @attachedBoxShadow;
    border: @attachedBorder;
***REMOVED***
  .ui.attached:not(.message) + .ui.attached.segment:not(.top) {
    border-top: none;
***REMOVED***

  /* Top***REMOVED***/
  .ui[class*="top attached"].segment {
    bottom: 0;
    margin-bottom: 0;
    top: @attachedTopOffset;
    margin-top: @verticalMargin;
    border-radius: @borderRadius @borderRadius 0 0;
***REMOVED***
  .ui.segment[class*="top attached"]:first-child {
    margin-top: 0;
***REMOVED***

  /* Bottom***REMOVED***/
  .ui.segment[class*="bottom attached"] {
    bottom: 0;
    margin-top: 0;
    top: @attachedBottomOffset;
    margin-bottom: @verticalMargin;
    box-shadow: @attachedBottomBoxShadow;
    border-radius: 0 0 @borderRadius @borderRadius;
***REMOVED***
  .ui.segment[class*="bottom attached"]:last-child {
    margin-bottom: @verticalMargin;
***REMOVED***
***REMOVED***

& when (@variationSegmentFitted) {
  /*--------------
       Fitted
  ---------------*/

  .ui.fitted.segment:not(.horizontally) {
    padding-top: 0;
    padding-bottom: 0;
***REMOVED***
  .ui.fitted.segment:not(.vertically) {
    padding-left: 0;
    padding-right: 0;
***REMOVED***
***REMOVED***

/*-------------------
        Size
--------------------*/

.ui.segments .segment,
.ui.segment {
  font-size: @medium;
***REMOVED***
& when not (@variationSegmentSizes = false) {
  each(@variationSegmentSizes, {
    @s: @@value;
    .ui.@{value***REMOVED***.segments .segment,
    .ui.@{value***REMOVED***.segment {
      font-size: @s;
  ***REMOVED***
***REMOVED***)
***REMOVED***

.loadUIOverrides();
